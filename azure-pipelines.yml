# Comments marked with 3 sharps (###) 
# describes dynamic variables which has to be changed during the template adjustment 
trigger:
- main
- azure-pipelines

resources:
- repo: self

variables:
  imageRepository: 'vander-consulting.api'
  containerRegistry: 'basharedcr.azurecr.io'
  dockerRegistryServiceConnection: 'basharedcr'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  minorVersion: '1'
  majorVersion: '0'
  tag: '$(minorVersion).$(majorVersion).$(Build.BuildId).$(Build.SourceBranchName)'
  shortTag: 'latest-$(Build.SourceBranchName)'
  gcloudContainerRegistryHost: 'europe-central2-docker.pkg.dev'
  gcloudContainerRegistry: 'europe-central2-docker.pkg.dev/vanderful-website/arvanderful/'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: TestBuild
  displayName: Test build and validation
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:  
  - job: TestValidation
    displayName: Build and Validate
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Test build
      inputs:
        command: 'build'
        Dockerfile: $(dockerfilePath)

- stage: ProductionBuild
  displayName: Build docker image and push it to Cintainer Registry
  condition: ne(variables['Build.Reason'], 'PullRequest')
  jobs:  
  - job: Build
    displayName: Docker build
    pool:
      vmImage: $(vmImageName)
    steps:
      
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(shortTag)

- stage: ProductionDeploy
  displayName: Deploy to google cloud
  condition: ne(variables['Build.Reason'], 'PullRequest')
  jobs:  
  - job: ProdDeploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: none
    - task: Docker@2
      displayName: 'Docker Login'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        command: 'login'
    - task: Bash@3
      displayName: 'Pull image'
      inputs:
        targetType: 'inline'
        script: 'docker pull $(containerRegistry)/$(imageRepository):$(shortTag)'
    - task: Bash@3
      displayName: 'Set gcloud tag'
      inputs:
        targetType: 'inline'
        script: 'docker tag $(containerRegistry)/$(imageRepository):$(shortTag) $(gcloudContainerRegistry)$(imageRepository):$(shortTag)'
  
    - task: DownloadSecureFile@1
      displayName: 'Download service key file'
      name: serviceKey
      inputs:
        secureFile: 'vanderful-website-service-key.json'
    - task: Bash@3
      displayName: 'Authorize in gcloud'
      inputs:
        targetType: 'inline'
        script: |
          cat $(serviceKey.secureFilePath) | docker login -u _json_key --password-stdin \
          https://$(gcloudContainerRegistryHost)
    - task: Bash@3
      displayName: 'Push to gcloud'
      inputs:
        targetType: 'inline'
        script: 'docker push $(gcloudContainerRegistry)$(imageRepository):$(shortTag)'